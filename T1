import random as rd
import copy
from matplotlib import pyplot as plt

def All_locations():
    locations=[]
    cities=
    [
    '小明家','1','2','3','4','5','6','7','8','9','10',
    '11','12','13','14','15','16','17','18','19','20',
    '21','22','23','24','25','26','27','28','29','30',
    '31'
    ]
    xs=[82,96,50,49,13,29,58,84,14,2,3,5,98,84,61,1,88,91,19,93,50,98,5,42,61,9,80,57,23,20,85,98]
    ys=[76,44,5,8,7,89,30,39,24,39,82,10,52,25,59,65,51,2,32,3,93,14,42,9,62,97,55,69,15,70,60,5]
    pks=[19,21,6,19,7,12,16,6,16,8,14,21,16,3,22,18,19,1,24,8,12,4,8,24,24,2,20,15,2,14,9]
    for x,y,name,pk in zip(xs,ys,cities,pks):
        locations.append(Location(name,x,y,pk))
    return locations,xs,ys,cities,pks





class Location:
    def __init__(self,name,x,y,pk):
        self.name=name
        self.loc=(x,y)
        self.pk=pk

    def distance_between(self,Location2):
        assert isinstance(Location2,Location)
        return((self.loc[0]-Location2.loc[0])**2+(self..loc[1]-Location2.loc[1])**2)**(1/2)

class Route:
    def __init__(self,path):
        self.path=path
        self.length=self._set_length()

    def _set_length(self):
        path_copy = self.path[:]
        from_here = path_copy.pop(0)
        init_node = copy.deepcopy(from_here)
        while path_copy:
            to_there = path_copy.pop(0)
            total_length += to_there.distance_between(from_here)
            from_here = copy.deepcopy(to_there)
        total_length += from_here.distance_between(init_node)
        return total_length

    fig, ax = plt.subplots()
    ax.plot([loc.loc[0] for loc in best_route], [loc.loc[1] for loc in best_route], 'red', linestyle='-', marker='')
    ax.scatter(xs, ys)
    for i, txt in enumerate(cities):
        ax.annotate(txt, (xs[i], ys[i]))
    plt.show()

